{
  "{\"assumptions\":{},\"sourceRoot\":\"/home/user/Desktop/LOCAL_SCRIPTS/PHP/SERVERS/APACHE_PHP_1_AND_2/PROJECTS/CODE_OUTSIDE_WEB_ROOT/BLOCKCHAIN/wakandaCoin/coin/test/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/user/Desktop/LOCAL_SCRIPTS/PHP/SERVERS/APACHE_PHP_1_AND_2/PROJECTS/CODE_OUTSIDE_WEB_ROOT/BLOCKCHAIN/wakandaCoin/coin\",\"filename\":\"/home/user/Desktop/LOCAL_SCRIPTS/PHP/SERVERS/APACHE_PHP_1_AND_2/PROJECTS/CODE_OUTSIDE_WEB_ROOT/BLOCKCHAIN/wakandaCoin/coin/test/test_wakandaCoin.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/user/Desktop/LOCAL_SCRIPTS/PHP/SERVERS/APACHE_PHP_1_AND_2/PROJECTS/CODE_OUTSIDE_WEB_ROOT/BLOCKCHAIN/wakandaCoin/coin\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.14.5": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/user/Desktop/LOCAL_SCRIPTS/PHP/SERVERS/APACHE_PHP_1_AND_2/PROJECTS/CODE_OUTSIDE_WEB_ROOT/BLOCKCHAIN/wakandaCoin/coin/test/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/user/Desktop/LOCAL_SCRIPTS/PHP/SERVERS/APACHE_PHP_1_AND_2/PROJECTS/CODE_OUTSIDE_WEB_ROOT/BLOCKCHAIN/wakandaCoin/coin",
      "filename": "/home/user/Desktop/LOCAL_SCRIPTS/PHP/SERVERS/APACHE_PHP_1_AND_2/PROJECTS/CODE_OUTSIDE_WEB_ROOT/BLOCKCHAIN/wakandaCoin/coin/test/test_wakandaCoin.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/user/Desktop/LOCAL_SCRIPTS/PHP/SERVERS/APACHE_PHP_1_AND_2/PROJECTS/CODE_OUTSIDE_WEB_ROOT/BLOCKCHAIN/wakandaCoin/coin",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/user/Desktop/LOCAL_SCRIPTS/PHP/SERVERS/APACHE_PHP_1_AND_2/PROJECTS/CODE_OUTSIDE_WEB_ROOT/BLOCKCHAIN/wakandaCoin/coin/test/test_wakandaCoin.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/user/Desktop/LOCAL_SCRIPTS/PHP/SERVERS/APACHE_PHP_1_AND_2/PROJECTS/CODE_OUTSIDE_WEB_ROOT/BLOCKCHAIN/wakandaCoin/coin/test/test_wakandaCoin.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/user/Desktop/LOCAL_SCRIPTS/PHP/SERVERS/APACHE_PHP_1_AND_2/PROJECTS/CODE_OUTSIDE_WEB_ROOT/BLOCKCHAIN/wakandaCoin/coin/test/",
        "sourceFileName": "test_wakandaCoin.js"
      }
    },
    "ast": null,
    "code": "const BigNumber = web3.BigNumber;\n\nconst WakandaCoin = artifacts.require(\"WakandaCoin.sol\");\n\nconst BN = require(\"bn.js\");\n\nrequire(\"chai\").use(require(\"chai-bignumber\")(BigNumber)).should();\n\ncontract('WakandaCoin', accounts => {\n  const _name = \"WakandaCoin\";\n  const _symbol = \"WAKC\";\n  const _decimals = 18;\n\n  const _totalSupply = new BN(\"1000000000000000\");\n\n  beforeEach(async function () {\n    this.coin = await WakandaCoin.new();\n  });\n  describe(\"Coin attributes\", function () {\n    it(\"Has correct name\", async function () {\n      const name = await this.coin.name();\n      name.should.equal(_name);\n    });\n    it(\"Has correct symbol\", async function () {\n      const symbol = await this.coin.symbol();\n      symbol.should.equal(_symbol);\n    });\n    it(\"Has correct decimals\", async function () {\n      var decimals = await this.coin.decimals();\n      decimals = decimals.toNumber();\n      decimals.should.be.bignumber.equal(_decimals);\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3Rfd2FrYW5kYUNvaW4uanMiXSwibmFtZXMiOlsiQmlnTnVtYmVyIiwid2ViMyIsIldha2FuZGFDb2luIiwiYXJ0aWZhY3RzIiwicmVxdWlyZSIsIkJOIiwidXNlIiwic2hvdWxkIiwiY29udHJhY3QiLCJhY2NvdW50cyIsIl9uYW1lIiwiX3N5bWJvbCIsIl9kZWNpbWFscyIsIl90b3RhbFN1cHBseSIsImJlZm9yZUVhY2giLCJjb2luIiwibmV3IiwiZGVzY3JpYmUiLCJpdCIsIm5hbWUiLCJlcXVhbCIsInN5bWJvbCIsImRlY2ltYWxzIiwidG9OdW1iZXIiLCJiZSIsImJpZ251bWJlciJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsU0FBUyxHQUFHQyxJQUFJLENBQUNELFNBQXZCOztBQUVBLE1BQU1FLFdBQVcsR0FBR0MsU0FBUyxDQUFDQyxPQUFWLENBQWtCLGlCQUFsQixDQUFwQjs7QUFDQSxNQUFNQyxFQUFFLEdBQUdELE9BQU8sQ0FBQyxPQUFELENBQWxCOztBQUVBQSxPQUFPLENBQUMsTUFBRCxDQUFQLENBQ0VFLEdBREYsQ0FDTUYsT0FBTyxDQUFDLGdCQUFELENBQVAsQ0FBMEJKLFNBQTFCLENBRE4sRUFFRU8sTUFGRjs7QUFJQUMsUUFBUSxDQUFDLGFBQUQsRUFBZ0JDLFFBQVEsSUFBSTtBQUVuQyxRQUFNQyxLQUFLLEdBQUcsYUFBZDtBQUNBLFFBQU1DLE9BQU8sR0FBRyxNQUFoQjtBQUNBLFFBQU1DLFNBQVMsR0FBRyxFQUFsQjs7QUFDQSxRQUFNQyxZQUFZLEdBQUcsSUFBSVIsRUFBSixDQUFPLGtCQUFQLENBQXJCOztBQUVBUyxFQUFBQSxVQUFVLENBQUMsa0JBQWdCO0FBQzFCLFNBQUtDLElBQUwsR0FBWSxNQUFNYixXQUFXLENBQUNjLEdBQVosRUFBbEI7QUFDQSxHQUZTLENBQVY7QUFJQUMsRUFBQUEsUUFBUSxDQUFDLGlCQUFELEVBQW9CLFlBQVU7QUFFckNDLElBQUFBLEVBQUUsQ0FBQyxrQkFBRCxFQUFxQixrQkFBZ0I7QUFDdEMsWUFBTUMsSUFBSSxHQUFHLE1BQU0sS0FBS0osSUFBTCxDQUFVSSxJQUFWLEVBQW5CO0FBQ0FBLE1BQUFBLElBQUksQ0FBQ1osTUFBTCxDQUFZYSxLQUFaLENBQWtCVixLQUFsQjtBQUNBLEtBSEMsQ0FBRjtBQUtBUSxJQUFBQSxFQUFFLENBQUMsb0JBQUQsRUFBdUIsa0JBQWdCO0FBQ3hDLFlBQU1HLE1BQU0sR0FBRyxNQUFNLEtBQUtOLElBQUwsQ0FBVU0sTUFBVixFQUFyQjtBQUNBQSxNQUFBQSxNQUFNLENBQUNkLE1BQVAsQ0FBY2EsS0FBZCxDQUFvQlQsT0FBcEI7QUFDQSxLQUhDLENBQUY7QUFLQU8sSUFBQUEsRUFBRSxDQUFDLHNCQUFELEVBQXlCLGtCQUFnQjtBQUMxQyxVQUFJSSxRQUFRLEdBQUcsTUFBTSxLQUFLUCxJQUFMLENBQVVPLFFBQVYsRUFBckI7QUFDQUEsTUFBQUEsUUFBUSxHQUFHQSxRQUFRLENBQUNDLFFBQVQsRUFBWDtBQUNBRCxNQUFBQSxRQUFRLENBQUNmLE1BQVQsQ0FBZ0JpQixFQUFoQixDQUFtQkMsU0FBbkIsQ0FBNkJMLEtBQTdCLENBQW1DUixTQUFuQztBQUVBLEtBTEMsQ0FBRjtBQVFBLEdBcEJPLENBQVI7QUFzQkEsQ0FqQ08sQ0FBUiIsInNvdXJjZVJvb3QiOiIvaG9tZS91c2VyL0Rlc2t0b3AvTE9DQUxfU0NSSVBUUy9QSFAvU0VSVkVSUy9BUEFDSEVfUEhQXzFfQU5EXzIvUFJPSkVDVFMvQ09ERV9PVVRTSURFX1dFQl9ST09UL0JMT0NLQ0hBSU4vd2FrYW5kYUNvaW4vY29pbi90ZXN0LyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IEJpZ051bWJlciA9IHdlYjMuQmlnTnVtYmVyO1xuXG5jb25zdCBXYWthbmRhQ29pbiA9IGFydGlmYWN0cy5yZXF1aXJlKFwiV2FrYW5kYUNvaW4uc29sXCIpO1xuY29uc3QgQk4gPSByZXF1aXJlKFwiYm4uanNcIik7XG5cbnJlcXVpcmUoXCJjaGFpXCIpXG5cdC51c2UocmVxdWlyZShcImNoYWktYmlnbnVtYmVyXCIpKEJpZ051bWJlcikpXG5cdC5zaG91bGQoKTtcblxuY29udHJhY3QoJ1dha2FuZGFDb2luJywgYWNjb3VudHMgPT4ge1xuXG5cdGNvbnN0IF9uYW1lID0gXCJXYWthbmRhQ29pblwiO1xuXHRjb25zdCBfc3ltYm9sID0gXCJXQUtDXCI7XG5cdGNvbnN0IF9kZWNpbWFscyA9IDE4O1xuXHRjb25zdCBfdG90YWxTdXBwbHkgPSBuZXcgQk4oXCIxMDAwMDAwMDAwMDAwMDAwXCIpO1xuXG5cdGJlZm9yZUVhY2goYXN5bmMgZnVuY3Rpb24oKXtcblx0XHR0aGlzLmNvaW4gPSBhd2FpdCBXYWthbmRhQ29pbi5uZXcoKTtcblx0fSk7XG5cblx0ZGVzY3JpYmUoXCJDb2luIGF0dHJpYnV0ZXNcIiwgZnVuY3Rpb24oKXtcblxuXHRcdGl0KFwiSGFzIGNvcnJlY3QgbmFtZVwiLCBhc3luYyBmdW5jdGlvbigpe1x0XHRcdFxuXHRcdFx0Y29uc3QgbmFtZSA9IGF3YWl0IHRoaXMuY29pbi5uYW1lKCk7XG5cdFx0XHRuYW1lLnNob3VsZC5lcXVhbChfbmFtZSk7XG5cdFx0fSk7XG5cblx0XHRpdChcIkhhcyBjb3JyZWN0IHN5bWJvbFwiLCBhc3luYyBmdW5jdGlvbigpe1x0XHRcdFxuXHRcdFx0Y29uc3Qgc3ltYm9sID0gYXdhaXQgdGhpcy5jb2luLnN5bWJvbCgpO1xuXHRcdFx0c3ltYm9sLnNob3VsZC5lcXVhbChfc3ltYm9sKTtcblx0XHR9KTtcdFxuXG5cdFx0aXQoXCJIYXMgY29ycmVjdCBkZWNpbWFsc1wiLCBhc3luYyBmdW5jdGlvbigpe1x0XHRcdFxuXHRcdFx0dmFyIGRlY2ltYWxzID0gYXdhaXQgdGhpcy5jb2luLmRlY2ltYWxzKCk7XG5cdFx0XHRkZWNpbWFscyA9IGRlY2ltYWxzLnRvTnVtYmVyKCk7XG5cdFx0XHRkZWNpbWFscy5zaG91bGQuYmUuYmlnbnVtYmVyLmVxdWFsKF9kZWNpbWFscyk7XG5cblx0XHR9KTtcdFxuXG5cblx0fSk7XG5cbn0pOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "test_wakandaCoin.js"
      ],
      "names": [
        "BigNumber",
        "web3",
        "WakandaCoin",
        "artifacts",
        "require",
        "BN",
        "use",
        "should",
        "contract",
        "accounts",
        "_name",
        "_symbol",
        "_decimals",
        "_totalSupply",
        "beforeEach",
        "coin",
        "new",
        "describe",
        "it",
        "name",
        "equal",
        "symbol",
        "decimals",
        "toNumber",
        "be",
        "bignumber"
      ],
      "mappings": "AAAA,MAAMA,SAAS,GAAGC,IAAI,CAACD,SAAvB;;AAEA,MAAME,WAAW,GAAGC,SAAS,CAACC,OAAV,CAAkB,iBAAlB,CAApB;;AACA,MAAMC,EAAE,GAAGD,OAAO,CAAC,OAAD,CAAlB;;AAEAA,OAAO,CAAC,MAAD,CAAP,CACEE,GADF,CACMF,OAAO,CAAC,gBAAD,CAAP,CAA0BJ,SAA1B,CADN,EAEEO,MAFF;;AAIAC,QAAQ,CAAC,aAAD,EAAgBC,QAAQ,IAAI;AAEnC,QAAMC,KAAK,GAAG,aAAd;AACA,QAAMC,OAAO,GAAG,MAAhB;AACA,QAAMC,SAAS,GAAG,EAAlB;;AACA,QAAMC,YAAY,GAAG,IAAIR,EAAJ,CAAO,kBAAP,CAArB;;AAEAS,EAAAA,UAAU,CAAC,kBAAgB;AAC1B,SAAKC,IAAL,GAAY,MAAMb,WAAW,CAACc,GAAZ,EAAlB;AACA,GAFS,CAAV;AAIAC,EAAAA,QAAQ,CAAC,iBAAD,EAAoB,YAAU;AAErCC,IAAAA,EAAE,CAAC,kBAAD,EAAqB,kBAAgB;AACtC,YAAMC,IAAI,GAAG,MAAM,KAAKJ,IAAL,CAAUI,IAAV,EAAnB;AACAA,MAAAA,IAAI,CAACZ,MAAL,CAAYa,KAAZ,CAAkBV,KAAlB;AACA,KAHC,CAAF;AAKAQ,IAAAA,EAAE,CAAC,oBAAD,EAAuB,kBAAgB;AACxC,YAAMG,MAAM,GAAG,MAAM,KAAKN,IAAL,CAAUM,MAAV,EAArB;AACAA,MAAAA,MAAM,CAACd,MAAP,CAAca,KAAd,CAAoBT,OAApB;AACA,KAHC,CAAF;AAKAO,IAAAA,EAAE,CAAC,sBAAD,EAAyB,kBAAgB;AAC1C,UAAII,QAAQ,GAAG,MAAM,KAAKP,IAAL,CAAUO,QAAV,EAArB;AACAA,MAAAA,QAAQ,GAAGA,QAAQ,CAACC,QAAT,EAAX;AACAD,MAAAA,QAAQ,CAACf,MAAT,CAAgBiB,EAAhB,CAAmBC,SAAnB,CAA6BL,KAA7B,CAAmCR,SAAnC;AAEA,KALC,CAAF;AAQA,GApBO,CAAR;AAsBA,CAjCO,CAAR",
      "sourceRoot": "/home/user/Desktop/LOCAL_SCRIPTS/PHP/SERVERS/APACHE_PHP_1_AND_2/PROJECTS/CODE_OUTSIDE_WEB_ROOT/BLOCKCHAIN/wakandaCoin/coin/test/",
      "sourcesContent": [
        "const BigNumber = web3.BigNumber;\n\nconst WakandaCoin = artifacts.require(\"WakandaCoin.sol\");\nconst BN = require(\"bn.js\");\n\nrequire(\"chai\")\n\t.use(require(\"chai-bignumber\")(BigNumber))\n\t.should();\n\ncontract('WakandaCoin', accounts => {\n\n\tconst _name = \"WakandaCoin\";\n\tconst _symbol = \"WAKC\";\n\tconst _decimals = 18;\n\tconst _totalSupply = new BN(\"1000000000000000\");\n\n\tbeforeEach(async function(){\n\t\tthis.coin = await WakandaCoin.new();\n\t});\n\n\tdescribe(\"Coin attributes\", function(){\n\n\t\tit(\"Has correct name\", async function(){\t\t\t\n\t\t\tconst name = await this.coin.name();\n\t\t\tname.should.equal(_name);\n\t\t});\n\n\t\tit(\"Has correct symbol\", async function(){\t\t\t\n\t\t\tconst symbol = await this.coin.symbol();\n\t\t\tsymbol.should.equal(_symbol);\n\t\t});\t\n\n\t\tit(\"Has correct decimals\", async function(){\t\t\t\n\t\t\tvar decimals = await this.coin.decimals();\n\t\t\tdecimals = decimals.toNumber();\n\t\t\tdecimals.should.be.bignumber.equal(_decimals);\n\n\t\t});\t\n\n\n\t});\n\n});"
      ]
    },
    "sourceType": "module",
    "mtime": 1623685085651
  }
}